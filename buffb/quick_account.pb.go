// Code generated by protoc-gen-go. DO NOT EDIT.
// source: quick_account.proto

package buffb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QuickEntry struct {
	QuickID              string   `protobuf:"bytes,1,opt,name=quickID,proto3" json:"quickID,omitempty"`
	UserID               string   `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	QuickTime            int64    `protobuf:"varint,3,opt,name=quickTime,proto3" json:"quickTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuickEntry) Reset()         { *m = QuickEntry{} }
func (m *QuickEntry) String() string { return proto.CompactTextString(m) }
func (*QuickEntry) ProtoMessage()    {}
func (*QuickEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_767dda3f8f3b804f, []int{0}
}

func (m *QuickEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuickEntry.Unmarshal(m, b)
}
func (m *QuickEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuickEntry.Marshal(b, m, deterministic)
}
func (m *QuickEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickEntry.Merge(m, src)
}
func (m *QuickEntry) XXX_Size() int {
	return xxx_messageInfo_QuickEntry.Size(m)
}
func (m *QuickEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickEntry.DiscardUnknown(m)
}

var xxx_messageInfo_QuickEntry proto.InternalMessageInfo

func (m *QuickEntry) GetQuickID() string {
	if m != nil {
		return m.QuickID
	}
	return ""
}

func (m *QuickEntry) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *QuickEntry) GetQuickTime() int64 {
	if m != nil {
		return m.QuickTime
	}
	return 0
}

type QuickAccount struct {
	Uuid                 string    `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username             string    `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Pswdhash             string    `protobuf:"bytes,3,opt,name=pswdhash,proto3" json:"pswdhash,omitempty"`
	Email                string    `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Recovery             *Recovery `protobuf:"bytes,5,opt,name=recovery,proto3" json:"recovery,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *QuickAccount) Reset()         { *m = QuickAccount{} }
func (m *QuickAccount) String() string { return proto.CompactTextString(m) }
func (*QuickAccount) ProtoMessage()    {}
func (*QuickAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_767dda3f8f3b804f, []int{1}
}

func (m *QuickAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuickAccount.Unmarshal(m, b)
}
func (m *QuickAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuickAccount.Marshal(b, m, deterministic)
}
func (m *QuickAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickAccount.Merge(m, src)
}
func (m *QuickAccount) XXX_Size() int {
	return xxx_messageInfo_QuickAccount.Size(m)
}
func (m *QuickAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickAccount.DiscardUnknown(m)
}

var xxx_messageInfo_QuickAccount proto.InternalMessageInfo

func (m *QuickAccount) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *QuickAccount) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *QuickAccount) GetPswdhash() string {
	if m != nil {
		return m.Pswdhash
	}
	return ""
}

func (m *QuickAccount) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *QuickAccount) GetRecovery() *Recovery {
	if m != nil {
		return m.Recovery
	}
	return nil
}

type Recovery struct {
	Recovery             string   `protobuf:"bytes,5,opt,name=recovery,proto3" json:"recovery,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Recovery) Reset()         { *m = Recovery{} }
func (m *Recovery) String() string { return proto.CompactTextString(m) }
func (*Recovery) ProtoMessage()    {}
func (*Recovery) Descriptor() ([]byte, []int) {
	return fileDescriptor_767dda3f8f3b804f, []int{2}
}

func (m *Recovery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recovery.Unmarshal(m, b)
}
func (m *Recovery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recovery.Marshal(b, m, deterministic)
}
func (m *Recovery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recovery.Merge(m, src)
}
func (m *Recovery) XXX_Size() int {
	return xxx_messageInfo_Recovery.Size(m)
}
func (m *Recovery) XXX_DiscardUnknown() {
	xxx_messageInfo_Recovery.DiscardUnknown(m)
}

var xxx_messageInfo_Recovery proto.InternalMessageInfo

func (m *Recovery) GetRecovery() string {
	if m != nil {
		return m.Recovery
	}
	return ""
}

type QuickAccounts struct {
	Accounts             []*QuickAccount `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *QuickAccounts) Reset()         { *m = QuickAccounts{} }
func (m *QuickAccounts) String() string { return proto.CompactTextString(m) }
func (*QuickAccounts) ProtoMessage()    {}
func (*QuickAccounts) Descriptor() ([]byte, []int) {
	return fileDescriptor_767dda3f8f3b804f, []int{3}
}

func (m *QuickAccounts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuickAccounts.Unmarshal(m, b)
}
func (m *QuickAccounts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuickAccounts.Marshal(b, m, deterministic)
}
func (m *QuickAccounts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickAccounts.Merge(m, src)
}
func (m *QuickAccounts) XXX_Size() int {
	return xxx_messageInfo_QuickAccounts.Size(m)
}
func (m *QuickAccounts) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickAccounts.DiscardUnknown(m)
}

var xxx_messageInfo_QuickAccounts proto.InternalMessageInfo

func (m *QuickAccounts) GetAccounts() []*QuickAccount {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type QuickEntries struct {
	Entries              []*QuickEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QuickEntries) Reset()         { *m = QuickEntries{} }
func (m *QuickEntries) String() string { return proto.CompactTextString(m) }
func (*QuickEntries) ProtoMessage()    {}
func (*QuickEntries) Descriptor() ([]byte, []int) {
	return fileDescriptor_767dda3f8f3b804f, []int{4}
}

func (m *QuickEntries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuickEntries.Unmarshal(m, b)
}
func (m *QuickEntries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuickEntries.Marshal(b, m, deterministic)
}
func (m *QuickEntries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickEntries.Merge(m, src)
}
func (m *QuickEntries) XXX_Size() int {
	return xxx_messageInfo_QuickEntries.Size(m)
}
func (m *QuickEntries) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickEntries.DiscardUnknown(m)
}

var xxx_messageInfo_QuickEntries proto.InternalMessageInfo

func (m *QuickEntries) GetEntries() []*QuickEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func init() {
	proto.RegisterType((*QuickEntry)(nil), "QuickEntry")
	proto.RegisterType((*QuickAccount)(nil), "QuickAccount")
	proto.RegisterType((*Recovery)(nil), "Recovery")
	proto.RegisterType((*QuickAccounts)(nil), "QuickAccounts")
	proto.RegisterType((*QuickEntries)(nil), "QuickEntries")
}

func init() {
	proto.RegisterFile("quick_account.proto", fileDescriptor_767dda3f8f3b804f)
}

var fileDescriptor_767dda3f8f3b804f = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xe5, 0xa6, 0x69, 0x93, 0x71, 0x53, 0x85, 0x6d, 0x15, 0x2c, 0xd3, 0x43, 0xb0, 0x54,
	0x14, 0x2a, 0x6a, 0xb7, 0x41, 0x5c, 0x72, 0x41, 0x2d, 0x29, 0x25, 0x70, 0xc2, 0xb4, 0x17, 0x84,
	0x54, 0x6d, 0xdc, 0x89, 0x6b, 0x88, 0xff, 0xe0, 0x5d, 0xa7, 0x8a, 0x10, 0x97, 0x3e, 0x02, 0x1c,
	0x78, 0x30, 0x5e, 0x81, 0x07, 0x41, 0xbb, 0x5e, 0x3b, 0xb6, 0x2a, 0xc4, 0x25, 0xf1, 0x37, 0xdf,
	0xec, 0x6f, 0x67, 0xc6, 0x63, 0xd8, 0xf9, 0x9a, 0x05, 0xde, 0x97, 0x2b, 0xea, 0x79, 0x71, 0x16,
	0x71, 0x3b, 0x49, 0x63, 0x1e, 0x9b, 0x8f, 0xfc, 0x38, 0xf6, 0xe7, 0xe8, 0x48, 0x35, 0xcd, 0x66,
	0x0e, 0x86, 0x09, 0x5f, 0x2a, 0x73, 0x4f, 0x99, 0x34, 0x09, 0x1c, 0x1a, 0x45, 0x31, 0xa7, 0x3c,
	0x88, 0x23, 0xa6, 0xdc, 0x67, 0xf2, 0xcf, 0x3b, 0xf4, 0x31, 0x3a, 0x64, 0xb7, 0xd4, 0xf7, 0x31,
	0x75, 0xe2, 0x44, 0x66, 0xdc, 0xcf, 0xb6, 0x3e, 0x01, 0xbc, 0x17, 0xf7, 0x9f, 0x45, 0x3c, 0x5d,
	0x12, 0x03, 0x36, 0x65, 0x35, 0x93, 0xb1, 0xa1, 0xf5, 0xb5, 0x41, 0xdb, 0x2d, 0x24, 0xe9, 0xc1,
	0x46, 0xc6, 0x30, 0x9d, 0x8c, 0x8d, 0x35, 0x69, 0x28, 0x45, 0xf6, 0xa0, 0x2d, 0x53, 0x2e, 0x82,
	0x10, 0x8d, 0x46, 0x5f, 0x1b, 0x34, 0xdc, 0x55, 0xc0, 0xfa, 0xa5, 0xc1, 0x96, 0xc4, 0x9f, 0xe4,
	0xdd, 0x11, 0x02, 0xeb, 0x59, 0x16, 0x5c, 0x2b, 0xba, 0x7c, 0x26, 0x26, 0xb4, 0x04, 0x2c, 0xa2,
	0x21, 0x2a, 0x78, 0xa9, 0x85, 0x97, 0xb0, 0xdb, 0xeb, 0x1b, 0xca, 0x6e, 0x24, 0xbd, 0xed, 0x96,
	0x9a, 0xec, 0x42, 0x13, 0x43, 0x1a, 0xcc, 0x8d, 0x75, 0x69, 0xe4, 0x82, 0xec, 0x43, 0x2b, 0x45,
	0x2f, 0x5e, 0x60, 0xba, 0x34, 0x9a, 0x7d, 0x6d, 0xa0, 0x0f, 0xdb, 0xb6, 0xab, 0x02, 0x6e, 0x69,
	0x59, 0x4f, 0xa0, 0x55, 0x44, 0xc5, 0x25, 0xb5, 0x23, 0xed, 0x4a, 0xde, 0x08, 0x3a, 0xd5, 0x06,
	0x18, 0x79, 0x0a, 0x2d, 0xf5, 0xaa, 0x98, 0xa1, 0xf5, 0x1b, 0x03, 0x7d, 0xd8, 0xb1, 0xab, 0x19,
	0x6e, 0x69, 0x5b, 0x2f, 0x54, 0xf3, 0x62, 0xb6, 0x01, 0x32, 0xb2, 0x0f, 0x9b, 0x98, 0x3f, 0xaa,
	0x93, 0xba, 0xbd, 0x9a, 0xbd, 0x5b, 0x78, 0xc3, 0xbb, 0x86, 0x3a, 0xf7, 0x01, 0xd3, 0x45, 0xe0,
	0x21, 0x79, 0x0d, 0x9d, 0x57, 0x29, 0x52, 0x8e, 0xc5, 0x14, 0xeb, 0x37, 0x9a, 0x75, 0x69, 0x3d,
	0xbc, 0xfb, 0xfd, 0xe7, 0xe7, 0xda, 0x03, 0x6b, 0xcb, 0x59, 0x1c, 0x3b, 0x45, 0x31, 0x23, 0xed,
	0x80, 0xbc, 0x03, 0xfd, 0x1c, 0x79, 0xd9, 0x49, 0xcf, 0xce, 0xf7, 0xc8, 0x2e, 0x96, 0xcc, 0x3e,
	0x13, 0x4b, 0x66, 0x6e, 0xd7, 0x70, 0xcc, 0xda, 0x95, 0xbc, 0x6d, 0x52, 0xe3, 0x11, 0x17, 0xba,
	0x2b, 0xd8, 0xe9, 0xf2, 0xf2, 0x72, 0x32, 0xfe, 0x4f, 0x5d, 0x7d, 0xc9, 0x31, 0x89, 0x51, 0xe5,
	0x38, 0x62, 0x05, 0x9c, 0x6f, 0xe2, 0xf7, 0x3b, 0x79, 0x09, 0x7a, 0xde, 0x68, 0xbe, 0x8d, 0xd5,
	0xf1, 0x98, 0x55, 0x61, 0xf5, 0x24, 0xaa, 0x6b, 0xe9, 0x02, 0xa5, 0xe6, 0x26, 0x3a, 0x7c, 0x03,
	0x70, 0x8e, 0xbc, 0x98, 0xf7, 0xbf, 0x1a, 0xec, 0xd8, 0xd5, 0xd7, 0x62, 0xed, 0x48, 0x58, 0x87,
	0x54, 0x61, 0xa7, 0x17, 0x3f, 0x4e, 0xde, 0x92, 0xc7, 0x60, 0xd4, 0x3e, 0xce, 0xab, 0x90, 0x46,
	0xd4, 0xc7, 0x10, 0x23, 0x3e, 0x6c, 0x1e, 0xd9, 0x47, 0xf6, 0xf1, 0x81, 0xb6, 0x36, 0xec, 0xd2,
	0x24, 0x99, 0x07, 0x9e, 0xfc, 0xac, 0x9c, 0xcf, 0x2c, 0x8e, 0x46, 0xf7, 0x22, 0x1f, 0x9b, 0xd3,
	0x6c, 0x36, 0x9b, 0x4e, 0x37, 0x64, 0x25, 0xcf, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x80, 0xc3,
	0xed, 0xde, 0xf4, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// QuickServiceClient is the client API for QuickService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QuickServiceClient interface {
	CreateAccount(ctx context.Context, in *QuickAccount, opts ...grpc.CallOption) (*QuickAccount, error)
	GetAccounts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QuickAccounts, error)
	GetAccountByUUID(ctx context.Context, in *QuickAccount, opts ...grpc.CallOption) (*QuickAccount, error)
	CreateEntry(ctx context.Context, in *QuickEntry, opts ...grpc.CallOption) (*QuickEntry, error)
	GetEntries(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QuickEntries, error)
}

type quickServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewQuickServiceClient(cc grpc.ClientConnInterface) QuickServiceClient {
	return &quickServiceClient{cc}
}

func (c *quickServiceClient) CreateAccount(ctx context.Context, in *QuickAccount, opts ...grpc.CallOption) (*QuickAccount, error) {
	out := new(QuickAccount)
	err := c.cc.Invoke(ctx, "/QuickService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickServiceClient) GetAccounts(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QuickAccounts, error) {
	out := new(QuickAccounts)
	err := c.cc.Invoke(ctx, "/QuickService/GetAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickServiceClient) GetAccountByUUID(ctx context.Context, in *QuickAccount, opts ...grpc.CallOption) (*QuickAccount, error) {
	out := new(QuickAccount)
	err := c.cc.Invoke(ctx, "/QuickService/GetAccountByUUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickServiceClient) CreateEntry(ctx context.Context, in *QuickEntry, opts ...grpc.CallOption) (*QuickEntry, error) {
	out := new(QuickEntry)
	err := c.cc.Invoke(ctx, "/QuickService/CreateEntry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *quickServiceClient) GetEntries(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QuickEntries, error) {
	out := new(QuickEntries)
	err := c.cc.Invoke(ctx, "/QuickService/GetEntries", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QuickServiceServer is the server API for QuickService service.
type QuickServiceServer interface {
	CreateAccount(context.Context, *QuickAccount) (*QuickAccount, error)
	GetAccounts(context.Context, *empty.Empty) (*QuickAccounts, error)
	GetAccountByUUID(context.Context, *QuickAccount) (*QuickAccount, error)
	CreateEntry(context.Context, *QuickEntry) (*QuickEntry, error)
	GetEntries(context.Context, *empty.Empty) (*QuickEntries, error)
}

// UnimplementedQuickServiceServer can be embedded to have forward compatible implementations.
type UnimplementedQuickServiceServer struct {
}

func (*UnimplementedQuickServiceServer) CreateAccount(ctx context.Context, req *QuickAccount) (*QuickAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedQuickServiceServer) GetAccounts(ctx context.Context, req *empty.Empty) (*QuickAccounts, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccounts not implemented")
}
func (*UnimplementedQuickServiceServer) GetAccountByUUID(ctx context.Context, req *QuickAccount) (*QuickAccount, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccountByUUID not implemented")
}
func (*UnimplementedQuickServiceServer) CreateEntry(ctx context.Context, req *QuickEntry) (*QuickEntry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntry not implemented")
}
func (*UnimplementedQuickServiceServer) GetEntries(ctx context.Context, req *empty.Empty) (*QuickEntries, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntries not implemented")
}

func RegisterQuickServiceServer(s *grpc.Server, srv QuickServiceServer) {
	s.RegisterService(&_QuickService_serviceDesc, srv)
}

func _QuickService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuickAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickServiceServer).CreateAccount(ctx, req.(*QuickAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickService_GetAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickServiceServer).GetAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickService/GetAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickServiceServer).GetAccounts(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickService_GetAccountByUUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuickAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickServiceServer).GetAccountByUUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickService/GetAccountByUUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickServiceServer).GetAccountByUUID(ctx, req.(*QuickAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickService_CreateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuickEntry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickServiceServer).CreateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickService/CreateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickServiceServer).CreateEntry(ctx, req.(*QuickEntry))
	}
	return interceptor(ctx, in, info, handler)
}

func _QuickService_GetEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QuickServiceServer).GetEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/QuickService/GetEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QuickServiceServer).GetEntries(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _QuickService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "QuickService",
	HandlerType: (*QuickServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _QuickService_CreateAccount_Handler,
		},
		{
			MethodName: "GetAccounts",
			Handler:    _QuickService_GetAccounts_Handler,
		},
		{
			MethodName: "GetAccountByUUID",
			Handler:    _QuickService_GetAccountByUUID_Handler,
		},
		{
			MethodName: "CreateEntry",
			Handler:    _QuickService_CreateEntry_Handler,
		},
		{
			MethodName: "GetEntries",
			Handler:    _QuickService_GetEntries_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "quick_account.proto",
}
